---------------------
 HashMap - since 1.2
---------------------

public class HashMap<K,V>
extends AbstractMap<K,V>
implements Map<K,V>, Cloneable, Serializable

- Hash table based implementation of the Map interface
- O(1) for get, put and remove
- insertion order is not preserved
- permits null values and one null key
- not synchronized unlike Hashtable

The HashMap class is roughly equivalent to Hashtable, except that it is unsynchronized and permits nulls.

Note that this implementation is not synchronized.
If multiple threads access a hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally. (A structural modification is any operation that adds or deletes one or more mappings; merely changing the value associated with a key that an instance already contains is not a structural modification.)
This is typically accomplished by synchronizing on some object that naturally encapsulates the map.
If no such object exists, the map should be "wrapped" using the Collections.synchronizedMap method.
This is best done at creation time, to prevent accidental unsynchronized access to the map:

   Map m = Collections.synchronizedMap(new HashMap(...));

